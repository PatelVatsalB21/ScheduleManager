package com.example.schedulemanager;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.net.ConnectivityManager;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import com.example.schedulemanager.Intro.Introduction;import com.example.schedulemanager.LoginandUser.Register;import com.example.schedulemanager.MainFragments.HomePage;import com.example.schedulemanager.email.AuthPreferences;import com.firebase.ui.auth.AuthUI;import com.google.android.gms.auth.api.signin.GoogleSignIn;import com.google.android.gms.auth.api.signin.GoogleSignInAccount;import com.google.android.gms.auth.api.signin.GoogleSignInClient;import com.google.android.gms.auth.api.signin.GoogleSignInOptions;import com.google.android.gms.common.SignInButton;import com.google.android.gms.common.api.ApiException;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.android.material.snackbar.Snackbar;import com.google.firebase.auth.AuthCredential;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.FirebaseUser;import com.google.firebase.auth.GoogleAuthProvider;import java.util.Arrays;import java.util.Collections;import java.util.List;import static com.google.firebase.auth.FirebaseAuth.AuthStateListener;//import com.facebook.CallbackManager;//import com.facebook.FacebookButtonBase;//import com.facebook.FacebookCallback;//import com.facebook.FacebookException;//import com.facebook.login.LoginManager;//import com.facebook.login.LoginResult;//import com.facebook.login.widget.LoginButton;//import static com.facebook.appevents.UserDataStore.EMAIL;//import com.facebook.FacebookSdk;//import com.facebook.appevents.AppEventsLogger;public class MainActivity extends AppCompatActivity {    //    CallbackManager callbackManager;    public static final String TAG = "MainActivity";    private static final int APP_PERMISSION_REQUEST = 102;    GoogleSignInClient mGoogleSignInClient;//    TextInputEditText email, password;    Button login, new_account_btn;    FirebaseAuth mAuth;    FirebaseUser user;    AuthStateListener authStateListener;    SignInButton google_SignInBtn;//    LoginButton loginButton;//    TextView forgotPassword_btn;    TextView skipSignIn_Btn;    ProgressBar progressBar;    //    public static final String TAG = "Email_SignUp";    public static final int RC_SIGN_IN = 1;    //    private GoogleApiClient mGoogleApiClient;//    private ManagedChannel channel;//    private Session session;//    Credentials creds;    public static SharedPreferences FirstUseSharedPreferences;    final private static String FIRST_USE_DB = "First_use_DB";    public static Boolean isFirstUse;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);//        email = findViewById(R.id.emailetxt);//        password = findViewById(R.id.passwordetxt);        login = findViewById(R.id.login);        progressBar = findViewById(R.id.progressBar);        new_account_btn = findViewById(R.id.new_account_btn);//        forgotPassword_btn = findViewById(R.id.forgotPassword);        skipSignIn_Btn = findViewById(R.id.skipSignIn);//        gSignInBtn = findViewById(R.id.gSignInBtn);//        loginButton = (LoginButton) findViewById(R.id.facebook_login_btn);//        loginButton.setReadPermissions(Arrays.asList(EMAIL));        FirstUseSharedPreferences = getSharedPreferences("First.db", MODE_PRIVATE);        isFirstUse = FirstUseSharedPreferences.getBoolean(FIRST_USE_DB, true);        google_SignInBtn = findViewById(R.id.Google_Sign_In_btn_Main);        mAuth = FirebaseAuth.getInstance();        user = mAuth.getCurrentUser();//        callbackManager = CallbackManager.Factory.create();//        channel = ManagedChannelBuilder.forTarget("greeter.googleapis.com")//                .build();//        loginButton.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {//            @Override//            public void onSuccess(LoginResult loginResult) {//                // Print the user’s ID and the Auth Token to Android Studio’s Logcat Monitor////                Log.d(TAG, "User ID: " +//                        loginResult.getAccessToken().getUserId() + "\n" +//                        "Auth Token: " + loginResult.getAccessToken().getToken());////                startActivity(new Intent(MainActivity.this, HomePage.class));//            }////            // If the user cancels the login, then call onCancel////            @Override//            public void onCancel() {//                onBackPressed();//            }////            // If an error occurs, then call onError////            @Override//            public void onError(FacebookException exception) {////                Toast.makeText(MainActivity.this, "FaceBook SignIn Failed ", Toast.LENGTH_SHORT).show();//            }//        });        authStateListener = new AuthStateListener() {            @Override            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {                user = mAuth.getCurrentUser();                if (user != null) {                    // User is signed in                    if (user.getDisplayName() != null) {//                        makeSnackBar("Welcome " + user.getDisplayName());                        Toast.makeText(MainActivity.this, "Welcome " + user.getDisplayName(), Toast.LENGTH_SHORT).show();                    }                    startActivity(new Intent(MainActivity.this, HomePage.class));                    CheckFirstUse();//                    Settings_Main.LoginLoadDataFromServer(MainActivity.this);                } else {                    // User is signed out                    //Toast.makeText(MainActivity.this, "No User signed in", Toast.LENGTH_SHORT).show();                }            }        };        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)                .requestIdToken(getString(R.string.default_web_client_id))                .requestEmail()                .build();//        mGoogleApiClient = new GoogleApiClient.Builder(this)//                         .enableAutoManage(MainActivity.this , new GoogleApiClient.OnConnectionFailedListener() {//                     @Override//                     public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {//                                     }//                 }).addApi(Auth.GOOGLE_SIGN_IN_API, gso).build();//        AccountManager am = AccountManager.get(this); // "this" references the current Context////        Account[] accounts = am.getAccountsByType("com.google");//        mGoogleApiClient = new GoogleApiClient.Builder(this)//                .enableAutoManage(this, new GoogleApiClient.OnConnectionFailedListener() {//                    @Override//                    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {//                    }//                }).addApi(Auth.GOOGLE_SIGN_IN_API, gso).build();//        mGoogleSignInClient = GoogleSignIn.getClient(this, gso);        GoogleSignInAccount account = GoogleSignIn.getLastSignedInAccount(this);        ConnectivityManager conMgr = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);        if (account!=null){            mAuth = FirebaseAuth.getInstance();            user = mAuth.getCurrentUser();        }        google_SignInBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                signIn();            }        });        login.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (conMgr.getActiveNetworkInfo() != null && conMgr.getActiveNetworkInfo().isAvailable() && conMgr.getActiveNetworkInfo().isConnected()) {//                    AuthUI.IdpConfig provider = new AuthUI.IdpConfig.EmailBuilder().build();//                        ,new AuthUI.IdpConfig.FacebookBuilder().build()                    AuthUI.IdpConfig provider = new AuthUI.IdpConfig.EmailBuilder().build();                    startActivityForResult(                            AuthUI.getInstance()                                    .createSignInIntentBuilder()                                    .setAvailableProviders(Collections.singletonList(provider))                                    .setTheme(R.style.FireBase)                                    .build(),                            RC_SIGN_IN);//                if (ValidateInput(email.toString(), password.toString())) {//                    progressBar.setVisibility(View.VISIBLE);//                    startSignIn();//                }                } else {                    makeSnackBar("Please Check Your Internet Connection");//                    Toast.makeText(MainActivity.this, "Please Your Check Internet Connection", Toast.LENGTH_SHORT).show();                }            }        });        new_account_btn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (conMgr.getActiveNetworkInfo() != null && conMgr.getActiveNetworkInfo().isAvailable() && conMgr.getActiveNetworkInfo().isConnected()) {                    startActivity(new Intent(getApplicationContext(), Register.class));                } else {                    makeSnackBar("Please Check Your Internet Connection");//                    Toast.makeText(MainActivity.this, "Please Check Internet Connection", Toast.LENGTH_SHORT).show();                }            }        });        skipSignIn_Btn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {//                makeSnackBar("Welcome");                Toast.makeText(MainActivity.this, "Welcome", Toast.LENGTH_SHORT).show();//                startActivity(new Intent(MainActivity.this, HomePage.class));                CheckFirstUse();            }        });//        forgotPassword_btn.setOnClickListener(new View.OnClickListener() {//            @Override//            public void onClick(View v) {////                final EditText resetMail = new EditText(v.getContext());//                final AlertDialog.Builder passwordResetDialog = new AlertDialog.Builder(v.getContext());//                passwordResetDialog.setTitle("Reset Password ?");//                passwordResetDialog.setMessage("Enter Your Email To Received Reset Link.");//                passwordResetDialog.setView(resetMail);////                passwordResetDialog.setPositiveButton("Yes", new DialogInterface.OnClickListener() {//                    @Override//                    public void onClick(DialogInterface dialog, int which) {//                        // extract the com.example.firebase.email and send reset link//                        String mail = resetMail.getText().toString();//                        if (mail.length() == 0) {//                            Toast.makeText(MainActivity.this, "Please Enter Email Address", Toast.LENGTH_SHORT).show();//                            return;//                        }//                        if (!Patterns.EMAIL_ADDRESS.matcher(mail).matches()) {//                            Toast.makeText(MainActivity.this, "Please Enter Valid Email Address", Toast.LENGTH_SHORT).show();//                            return;//                        } else {//                            mAuth.sendPasswordResetEmail(mail).addOnSuccessListener(new OnSuccessListener<Void>() {//                                @Override//                                public void onSuccess(Void aVoid) {//                                    Toast.makeText(MainActivity.this, "Reset Link Sent To Your Email.", Toast.LENGTH_SHORT).show();//                                }//                            }).addOnFailureListener(new OnFailureListener() {//                                @Override//                                public void onFailure(@NonNull Exception e) {//                                    Toast.makeText(MainActivity.this, "Error ! Reset Link is Not Sent" + e.getMessage(), Toast.LENGTH_SHORT).show();//                                }//                            });////                        }//                    }//                });////                passwordResetDialog.setNegativeButton("No", new DialogInterface.OnClickListener() {//                    @Override//                    public void onClick(DialogInterface dialog, int which) {//                        // close the dialog//                    }//                });////                passwordResetDialog.create().show();////            }//        });////        gSignInBtn.setOnClickListener(new View.OnClickListener() {//            @Override//            public void onClick(View view) {////                ConnectivityManager conMgr = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);//                 ARE WE CONNECTED TO THE NET//                if (conMgr.getActiveNetworkInfo() != null && conMgr.getActiveNetworkInfo().isAvailable() && conMgr.getActiveNetworkInfo().isConnected()) {//                    signIn();//                } else {//                    Toast.makeText(MainActivity.this, "Please Check Internet Connection", Toast.LENGTH_SHORT).show();//                }//            }//        });//    }//    public void shutdown() throws InterruptedException {//        if (!channel.isShutdown()) {//            channel.shutdown().awaitTermination(5, TimeUnit.SECONDS);//        }////    }//    private void startSignIn() {//        String mEmail = email.getText().toString();//        String mPassword = password.getText().toString();////        mAuth.signInWithEmailAndPassword(mEmail, mPassword).addOnCompleteListener(new OnCompleteListener<AuthResult>() {//            @Override//            public void onComplete(@NonNull Task<AuthResult> task) {//                if (task.isSuccessful()) {//                    Toast.makeText(MainActivity.this, "Welcome ", Toast.LENGTH_SHORT).show();//                    progressBar.setVisibility(View.INVISIBLE);//                    startActivity(new Intent(MainActivity.this, HomePage.class));//////                } else task.addOnFailureListener(new OnFailureListener() {//                    @Override//                    public void onFailure(@NonNull Exception e) {//                        Toast.makeText(MainActivity.this, "Some Error Occured ", Toast.LENGTH_SHORT).show();//                        progressBar.setVisibility(View.INVISIBLE);//                    }////                });//////            }//        });//    }    private void signIn() {        Intent signInIntent = mGoogleSignInClient.getSignInIntent();        startActivityForResult(signInIntent, RC_SIGN_IN);    }    @Override    public void onActivityResult(int requestCode, int resultCode, Intent data) {        super.onActivityResult(requestCode, resultCode, data);        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);        if (requestCode == RC_SIGN_IN) {            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);            try {                // Google Sign In was successful, authenticate with Firebase                GoogleSignInAccount account = task.getResult(ApiException.class);                AuthPreferences authPreferences = new AuthPreferences(MainActivity.this);                authPreferences.setUser(account.getEmail());                authPreferences.setToken(account.getIdToken());                Log.e(TAG, "firebaseAuthWithGoogle:" + account.getId());                firebaseAuthWithGoogle(account.getIdToken());            } catch (ApiException e) {                // Google Sign In failed, update UI appropriately                Log.e(TAG, "Google sign in failed", e);                // ...            }        }    }    private void firebaseAuthWithGoogle(String idToken) {        AuthCredential credential = GoogleAuthProvider.getCredential(idToken,null);        mAuth.signInWithCredential(credential)                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {                    @Override                    public void onComplete(@NonNull Task<AuthResult> task) {                        if (task.isSuccessful()) {                            // Sign in success, update UI with the signed-in user's information                            Log.e(TAG, "signInWithCredential:success");                             user = mAuth.getCurrentUser();                        } else {                            // If sign in fails, display a message to the user.                            Log.e(TAG, "signInWithCredential:failure", task.getException());                            makeSnackBar("Some Error Occurred");//                            Toast.makeText(MainActivity.this, "Error", Toast.LENGTH_SHORT).show();                        }                    }                });    }//    private boolean ValidateInput(String email, String password) {//        if (email == null || email.isEmpty()) {////            Toast.makeText(MainActivity.this, "Please Enter Email Address", Toast.LENGTH_SHORT).show();//            return false;////        } else if (!Patterns.EMAIL_ADDRESS.matcher(email.trim()).matches()) {////            Toast.makeText(MainActivity.this, "Please Enter a Valid Email Address", Toast.LENGTH_SHORT).show();////            return false;//        } else if (password == null || password.isEmpty()) {////            Toast.makeText(MainActivity.this, "Please Enter Password", Toast.LENGTH_SHORT).show();//            return false;//        } else if (password.trim().length() < 6) {////            Toast.makeText(MainActivity.this, "Please Enter a Password of atleast 6 characters", Toast.LENGTH_SHORT).show();//            return false;//        } else {//            return true;//        }////    }    @Override    public void onStart() {        super.onStart();//        mGoogleApiClient.connect();        mAuth.addAuthStateListener(authStateListener);        FirebaseUser currentUser = mAuth.getCurrentUser();    }    @Override    public void onStop() {        super.onStop();//        mGoogleApiClient.disconnect();        if (authStateListener != null) {            mAuth.removeAuthStateListener(authStateListener);        }    }    public void CheckFirstUse() {        if (isFirstUse) {            startActivity(new Intent(MainActivity.this, Introduction.class).setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK));            FirstUseSharedPreferences.edit().putBoolean(FIRST_USE_DB, false).apply();        } else {            startActivity(new Intent(MainActivity.this, HomePage.class).setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK));        }        finish();    }    public void makeSnackBar(String message){        Snackbar snackbar = Snackbar.make(progressBar, message, Snackbar.LENGTH_SHORT);        snackbar.show();    }}