package com.example.schedulemanager.LoginandUser;import android.content.Context;import android.content.Intent;import android.net.ConnectivityManager;import android.os.Bundle;import android.util.Patterns;import android.view.View;import android.widget.Button;import android.widget.ProgressBar;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import com.example.schedulemanager.MainActivity;import com.example.schedulemanager.R;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.android.material.textfield.TextInputEditText;import com.google.android.material.textfield.TextInputLayout;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;public class Register extends AppCompatActivity {    public static final String TAG = "TAG";    TextInputEditText mEmail, mPassword;    TextInputLayout passwordLayout, emailLayout;    Button mRegisterBtn;    TextView mLoginBtn;    FirebaseAuth mAuth;    ProgressBar progressBar;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_register);        mEmail = findViewById(R.id.EmailEdit);        mPassword = findViewById(R.id.passwordEdit);        passwordLayout = findViewById(R.id.password);        emailLayout = findViewById(R.id.Email);        mRegisterBtn = findViewById(R.id.registerBtn);        mLoginBtn = findViewById(R.id.createText);        mAuth = FirebaseAuth.getInstance();        progressBar = findViewById(R.id.progressBar);        if (mAuth.getCurrentUser() != null) {            startActivity(new Intent(getApplicationContext(), MainActivity.class));            finish();        }        ConnectivityManager conMgr = (ConnectivityManager) getSystemService(                Context.CONNECTIVITY_SERVICE);        mRegisterBtn.setOnClickListener(v -> {            if (conMgr.getActiveNetworkInfo() != null && conMgr.getActiveNetworkInfo().isAvailable()                    && conMgr.getActiveNetworkInfo().isConnected()) {                final String email = mEmail.getText().toString().trim();                String password = mPassword.getText().toString().trim();                if (ValidateInput(email, password)) {                    progressBar.setVisibility(View.VISIBLE);                    mAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(                            new OnCompleteListener<AuthResult>() {                                @Override                                public void onComplete(@NonNull Task<AuthResult> task) {                                    if (task.isSuccessful()) {                                        Toast.makeText(Register.this,                                                "New user created successfully",                                                Toast.LENGTH_SHORT).show();                                        startActivity(new Intent(getApplicationContext(),                                                MainActivity.class));                                    } else {                                        Toast.makeText(Register.this, "Error Occurred "                                                        + task.getException().getMessage(),                                                Toast.LENGTH_SHORT).show();                                        progressBar.setVisibility(View.GONE);                                    }                                }                            });                }            } else {                Toast.makeText(Register.this, "Please Check Your Internet Connection",                        Toast.LENGTH_SHORT).show();            }        });        mLoginBtn.setOnClickListener(                v -> startActivity(new Intent(getApplicationContext(), MainActivity.class)));    }    private boolean ValidateInput(String email, String password) {        emailLayout.setError("");        passwordLayout.setError("");        if (email.trim().length() == 0) {            emailLayout.setError("Please Enter Email Address");            return false;        }        if (!Patterns.EMAIL_ADDRESS.matcher(email.trim()).matches()) {            emailLayout.setError("Please Enter a Valid Email Address");            return false;        }        if (password.trim().length() == 0) {            passwordLayout.setError("Please Enter Password");            return false;        }        if (password.trim().length() < 6) {            passwordLayout.setError("Please Enter a Password of atleast 6 characters");            return false;        } else {            return true;        }    }}