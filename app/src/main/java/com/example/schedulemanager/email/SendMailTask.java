package com.example.schedulemanager.email;import android.content.Context;import android.os.AsyncTask;import android.util.Log;import android.widget.Toast;import com.example.schedulemanager.Setting.Settings_Main;import java.util.Properties;import javax.mail.AuthenticationFailedException;import javax.mail.Message;import javax.mail.MessagingException;import javax.mail.PasswordAuthentication;import javax.mail.Session;import javax.mail.Transport;import javax.mail.internet.InternetAddress;import javax.mail.internet.MimeMessage;public class SendMailTask extends AsyncTask{    private Context context;    private Session session;    private String From;    private String To;    private String subject;    private String message;    public Boolean sentSuccessfully = false;    public Boolean FailedAuth = false;    public SendMailTask(Context context, String From, String TO, String subject, String message){        this.context = context;        this.From = From;        this.To = TO;        this.subject = subject;        this.message = message;    }    @Override    protected Object doInBackground(Object[] objects) {        Properties props = new Properties();        props.put("mail.smtp.host", "smtp.gmail.com");        props.put("mail.smtp.socketFactory.port", "465");        props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");        props.put("mail.smtp.auth", "true");        props.put("mail.smtp.port", "465");        props.put("mail.smtp.socketFactory.fallback", "false");        props.setProperty("mail.smtp.quitwait", "false");        session = Session.getDefaultInstance(props, new javax.mail.Authenticator() {            protected PasswordAuthentication getPasswordAuthentication() {                return new PasswordAuthentication(From, Settings_Main.App_Password);            }        });        try {            MimeMessage mm = new MimeMessage(session);            mm.setFrom(new InternetAddress(From));            mm.addRecipient(Message.RecipientType.TO, new InternetAddress(To));            mm.setSubject(subject);            mm.setText(message);            Transport.send(mm);            sentSuccessfully = true;            Log.e("TRY", "Called");            return null;        }catch (AuthenticationFailedException authFail){            authFail.printStackTrace();            sentSuccessfully = false;            FailedAuth = true;            Log.e("CATCH1", "Called");            return authFail;        }        catch (MessagingException e) {            sentSuccessfully = false;            e.printStackTrace();            Log.e("CATCH2", "Called");            return e;        }    }    @Override    protected void onPostExecute(Object o) {//            super.onPostExecute(o);//        progressDialog.dismiss();        if (sentSuccessfully) {            Toast.makeText(context, "Message Sent", Toast.LENGTH_LONG).show();        }else if (FailedAuth){            Toast.makeText(context, "Please re-enter your Google App Password", Toast.LENGTH_SHORT).show();        }else {            Toast.makeText(context, "Some error occurred while sending mail", Toast.LENGTH_SHORT).show();        }    }    @Override    protected void onPreExecute() {        super.onPreExecute();//        progressDialog = ProgressDialog.show(context,"Sending message","Please wait...",false,false);    }}